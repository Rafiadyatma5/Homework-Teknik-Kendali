import control
import matplotlib.pyplot as plt
import numpy as np

def CalcESS(tf, u, tf_name, input_type, title, t_final):
    tf = control.TransferFunction(tf[0], tf[1])
    u = control.TransferFunction(u[0], u[1])
    y = tf * u
    e = u - y

    plt.figure()
    time = np.linspace(0, t_final, num=1000)
    time_y, response_y = control.impulse_response(y, T=time)
    plt.plot(time_y, response_y, label='Output')
    time_u, response_u = control.impulse_response(u, T=time)
    plt.plot(time_u, response_u, label='Input')
    time_e, response_e = control.impulse_response(e, T=time)
    plt.plot(time_e, response_e, color='red', linestyle='--', label='Error')
    e_ss = response_e[-1]
    print(f"Steady state error for {input_type} input, {tf_name}: {e_ss}")
    plt.xlabel('Time (s)')
    plt.ylabel('Response')
    plt.title(title)
    plt.legend(loc="upper left")
    plt.grid()
    plt.show()

step = ([1], [1, 0])
ramp = ([1], [1, 0, 0])
parabolic = ([1], [1, 0, 0, 0])

tf0 = ([1, 3], [1, 5, 5])
tf1 = ([1, 3], [1, 5, 5, 0])
tf2 = ([1, 3], [1, 5, 5, 0, 0])

CalcESS(tf0, step, "tf0", "step", "Step response i = 0", t_final=100)
CalcESS(tf0, ramp, "tf0", "ramp", "Ramp response i = 0", t_final=100)
CalcESS(tf0, parabolic, "tf0", "parabolic", "Parabolic response i = 0", t_final=100)
CalcESS(tf1, step, "tf1", "step", "Step response i = 1", t_final=100)
CalcESS(tf1, ramp, "tf1", "ramp", "Ramp response i = 1", t_final=100)
CalcESS(tf1, parabolic, "tf1", "parabolic", "Parabolic response i = 1", t_final=100)
CalcESS(tf2, step, "tf2", "step", "Step response i = 2", t_final=100)
CalcESS(tf2, ramp, "tf2", "ramp", "Ramp response i = 2", t_final=100)
CalcESS(tf2, parabolic, "tf2", "parabolic", "Parabolic response i = 2", t_final=100)
